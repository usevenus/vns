
=head1 NAME

Venus::Task::Venus - vns

=cut

=head1 ABSTRACT

Task Class for Venus CLI

=cut

=head1 SYNOPSIS

  package main;

  use Venus::Task::Venus;

  my $task = Venus::Task::Venus->new;

  # bless({...}, 'Venus::Task::Venus')

=cut

=head1 DESCRIPTION

This package is the task class for the C<vns> CLI.

=cut

=head1 INHERITS

This package inherits behaviors from:

L<Venus::Task>

=cut

=head1 METHODS

This package provides the following methods:

=cut

=head2 new

  new(any @args) (Venus::Task::Venus)

The new method constructs an instance of the package.

I<Since C<4.15>>

=over 4

=item new example 1

  package main;

  use Venus::Task::Venus;

  my $task = Venus::Task::Venus->new;

  # bless({...}, 'Venus::Task::Venus')

=back

=cut

=head2 perform

  perform() (Venus::Task::Venus)

The perform method executes the CLI logic.

I<Since C<4.15>>

=over 4

=item perform example 1

  # given: synopsis

  package main;

  $task->prepare;

  $task->parse('');

  my $perform = $task->perform;

  # bless({...}, 'Venus::Task::Venus')

  # ''

=back

=over 4

=item perform example 2

  # given: synopsis

  package main;

  $task->prepare;

  $task->parse('die');

  my $perform = $task->perform;

  # bless({...}, 'Venus::Task::Venus')

  # ''

=back

=over 4

=item perform example 3

  # given: synopsis

  package main;

  $task->prepare;

  $task->parse('gen', '--stdout', '--class');

  my $perform = $task->perform;

  # bless({...}, 'Venus::Task::Venus')

  # '...'

=back

=over 4

=item perform example 4

  # given: synopsis

  package main;

  $task->prepare;

  $task->parse('get', 'perl.repl');

  my $perform = $task->perform;

  # bless({...}, 'Venus::Task::Venus')

  # '...'

=back

=over 4

=item perform example 5

  # given: synopsis

  package main;

  $task->prepare;

  $task->parse('new', 'yaml');

  my $perform = $task->perform;

  # bless({...}, 'Venus::Task::Venus')

  # '...'

=back

=over 4

=item perform example 6

  # given: synopsis

  package main;

  $task->prepare;

  $task->parse('run', 'okay', 't/Venus.t');

  my $perform = $task->perform;

  # bless({...}, 'Venus::Task::Venus')

  # '...'

=back

=over 4

=item perform example 7

  # given: synopsis

  package main;

  $task->prepare;

  $task->parse('set', 'perl.repl', '$PERL -dE0');

  my $perform = $task->perform;

  # bless({...}, 'Venus::Task::Venus')

  # '...'

=back

=cut

=head1 AUTHORS

Awncorp, C<awncorp@cpan.org>

=cut

=head1 LICENSE

Copyright (C) 2022, Awncorp, C<awncorp@cpan.org>.

This program is free software, you can redistribute it and/or modify it under
the terms of the Apache license version 2.0.

=cut